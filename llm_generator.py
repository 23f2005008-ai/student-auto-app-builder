import openai
import json
import base64
import os

class LLMAppGenerator:
    def __init__(self):
        openai.api_key = os.getenv('OPENAI_API_KEY')
    
    def generate_app(self, brief, attachments, checks):
        """Generate complete application based on brief"""
        print("ðŸ¤– Generating app with LLM...")
        
        # For demo purposes, return a simple counter app
        # In production, you'd use the actual OpenAI API
        return self._get_demo_app(brief)
    
    def _get_demo_app(self, brief):
        """Provide a demo app for testing"""
        return {
            "files": {
                "index.html": f"""<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Auto Generated App</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {{ padding: 20px; background: #f8f9fa; }}
        .app-container {{ max-width: 600px; margin: 0 auto; }}
    </style>
</head>
<body>
    <div class="app-container">
        <div class="card shadow">
            <div class="card-header bg-primary text-white">
                <h2>Auto-Generated Application</h2>
            </div>
            <div class="card-body">
                <p class="lead">This app was automatically generated based on your request:</p>
                <div class="alert alert-info">
                    <strong>Brief:</strong> {brief}
                </div>
                <hr>
                <h4>Simple Counter Demo</h4>
                <div class="text-center">
                    <h1 id="counter" class="display-1">0</h1>
                    <div class="btn-group">
                        <button class="btn btn-success" onclick="increment()">+1</button>
                        <button class="btn btn-danger" onclick="decrement()">-1</button>
                        <button class="btn btn-secondary" onclick="reset()">Reset</button>
                    </div>
                </div>
            </div>
            <div class="card-footer text-muted">
                Generated by Student Auto App Builder
            </div>
        </div>
    </div>

    <script>
        let count = 0;
        function updateCounter() {{
            document.getElementById('counter').textContent = count;
        }}
        function increment() {{
            count++;
            updateCounter();
        }}
        function decrement() {{
            count--;
            updateCounter();
        }}
        function reset() {{
            count = 0;
            updateCounter();
        }}
    </script>
</body>
</html>""",
                "README.md": f"""# Auto-Generated Application

This application was automatically generated by the Student Auto App Builder.

## Application Details

**Brief:** {brief}

## Features

- Responsive design with Bootstrap 5
- Simple counter functionality
- Clean, professional interface

## Setup

1. Open `index.html` in any web browser
2. Use the buttons to interact with the counter

## Technologies

- HTML5
- JavaScript
- Bootstrap 5

## License

MIT License

---
*Generated automatically*"""
            },
            "explanation": "Demo counter application with Bootstrap styling and professional README"
        }
